{"version":3,"sources":["Firebase.js","App.js","serviceWorker.js","index.js"],"names":["fireBD","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","App","state","data","modalInsertar","modalEditar","form","nombre","empresa","pais","liga","id","peticionGet","child","on","equipo","val","setState","peticionPost","push","error","console","log","peticionPut","set","peticionDelete","window","confirm","remove","handleChange","e","target","name","value","seleccionarEquipo","caso","a","this","className","onClick","Object","keys","map","i","key","Modal","isOpen","ModalHeader","ModalBody","type","onChange","ModalFooter","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7ca9d40b.chunk.js","sourcesContent":["\r\nimport * as firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCvrrKvpbF94bPIx2XHXZmmVkCZ-1dyHZ4\",\r\n    authDomain: \"ligabet-react.firebaseapp.com\",\r\n    databaseURL: \"https://ligabet-react.firebaseio.com\",\r\n    projectId: \"ligabet-react\",\r\n    storageBucket: \"ligabet-react.appspot.com\",\r\n    messagingSenderId: \"770959134815\",\r\n    appId: \"1:770959134815:web:496fb8ace7833dd8554bea\",\r\n    measurementId: \"G-EB0Y7YJPGJ\"\r\n  };\r\n  // Initialize Firebase\r\n  var fireBD = firebase.initializeApp(firebaseConfig);\r\n  // firebase.analytics();\r\n\r\n  export default fireBD.database().ref();\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// import Saludo from './Saludo';\r\nimport './App.css';\r\nimport firebase from './Firebase';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// import 'bootstrap/dist/bootstrap.min.css';\r\nimport {Modal, ModalBody, ModalHeader, ModalFooter} from 'reactstrap';\r\n \r\n\r\nclass App extends Component { \r\n  state = {\r\n  data: [],\r\n  modalInsertar: false,\r\n  modalEditar: false,\r\n  form:{\r\n    nombre: '',\r\n    empresa: '',\r\n    pais: '',\r\n    liga: ''\r\n  },\r\n  id: 0\r\n};\r\n\r\npeticionGet = () => {\r\n  firebase.child(\"equipos\").on(\"value\", (equipo) => {\r\n    if (equipo.val() !== null) {\r\n      this.setState({ ...this.state.data, data: equipo.val() });\r\n    } else {\r\n      this.setState({ data: [] });\r\n    }\r\n  });\r\n};\r\n\r\npeticionPost=()=>{\r\n  firebase.child(\"equipos\").push(this.state.form,\r\n    error=>{\r\n      if(error)console.log(error)\r\n    });\r\n    this.setState({modalInsertar: false});\r\n}\r\n\r\npeticionPut=()=>{\r\n  firebase.child(`equipos/${this.state.id}`).set(\r\n    this.state.form,\r\n    error=>{\r\n      if(error)console.log(error)\r\n    });\r\n    this.setState({modalEditar: false});\r\n}\r\n\r\npeticionDelete=()=>{\r\n  if(window.confirm(`Estás seguro que deseas eliminar el equipo ${this.state.form && this.state.form.equipo}?`))\r\n  {\r\n  firebase.child(`equipos/${this.state.id}`).remove(\r\n    error=>{\r\n      if(error)console.log(error)\r\n    });\r\n  }\r\n}\r\n\r\nhandleChange=e=>{\r\n  this.setState({form:{\r\n    ...this.state.form,\r\n    [e.target.name]: e.target.value\r\n  }})\r\n  console.log(this.state.form);\r\n}\r\n\r\nseleccionarEquipo=async(equipo, id, caso)=>{\r\n\r\n  await this.setState({form: equipo, id: id});\r\n\r\n  (caso===\"Editar\")?this.setState({modalEditar: true}):\r\n  this.peticionDelete()\r\n\r\n}\r\n\r\ncomponentDidMount() {\r\n  this.peticionGet();\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"App\">\r\n      <br />\r\n      <button className=\"btn btn-success\" onClick={()=>this.setState({modalInsertar: true})}>Insertar</button>\r\n      <br />\r\n      <br />\r\n\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Empresa </th>\r\n            <th>País</th>\r\n            <th>Liga</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {Object.keys(this.state.data).map(i=>{\r\n           // console.log(i);\r\n            return <tr key={i}>\r\n              <td>{this.state.data[i].nombre}</td>\r\n              <td>{this.state.data[i].empresa}</td>\r\n              <td>{this.state.data[i].pais}</td>\r\n              <td>{this.state.data[i].liga}</td>\r\n              <td>\r\n                <button className=\"btn btn-primary\" onClick={()=>this.seleccionarEquipo(this.state.data[i], i, 'Editar')}>Editar</button> {\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>this.seleccionarEquipo(this.state.data[i], i, 'Eliminar')}>Eliminar</button>\r\n              </td>\r\n\r\n            </tr>\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      <Modal isOpen={this.state.modalInsertar}>\r\n    <ModalHeader>Insertar Registro</ModalHeader>\r\n    <ModalBody>\r\n      <div className=\"form-group\">\r\n        <label>Nombre Equipo: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={this.handleChange}/>\r\n        <br />\r\n        <label>Empresa: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"empresa\" onChange={this.handleChange}/>\r\n        <br />\r\n        <label>Pais: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"pais\" onChange={this.handleChange}/>\r\n        <br />\r\n        <label>Liga: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"liga\" onChange={this.handleChange}/>\r\n      </div>\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <button className=\"btn btn-primary\" onClick={()=>this.peticionPost()}>Insertar</button>{\"   \"}\r\n      <button className=\"btn btn-danger\" onClick={()=>this.setState({modalInsertar: false})}>Cancelar</button>\r\n    </ModalFooter>\r\n  </Modal>\r\n\r\n\r\n\r\n  <Modal isOpen={this.state.modalEditar}>\r\n    <ModalHeader>Editar Registro</ModalHeader>\r\n    <ModalBody>\r\n      <div className=\"form-group\">\r\n        <label>Nombre Equipo: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={this.handleChange} value={this.state.form && this.state.form.nombre}/>\r\n        <br />\r\n        <label>Empresa: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"empresa\" onChange={this.handleChange} value={this.state.form && this.state.form.empresa}/>\r\n        <br />\r\n        <label>Pais: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"pais\" onChange={this.handleChange} value={this.state.form && this.state.form.pais}/>\r\n        <br />\r\n        <label>Liga: </label>\r\n        <br />\r\n        <input type=\"text\" className=\"form-control\" name=\"liga\" onChange={this.handleChange} value={this.state.form && this.state.form.liga}/>\r\n      </div>\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>Editar</button>{\"   \"}\r\n      <button className=\"btn btn-danger\" onClick={()=>this.setState({modalEditar: false})}>Cancelar</button>\r\n    </ModalFooter>\r\n  </Modal>\r\n    </div>\r\n  );\r\n}\r\n} \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}